"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.testEcosystem = exports.getEcosystem = exports.getPlugin = void 0;
const cppPlugin = require("snyk-cpp-plugin");
const types_1 = require("../cli/commands/types");
const EcosystemPlugins = {
    cpp: cppPlugin,
};
function getPlugin(ecosystem) {
    return EcosystemPlugins[ecosystem];
}
exports.getPlugin = getPlugin;
function getEcosystem(options) {
    if (options.source) {
        return 'cpp';
    }
    return null;
}
exports.getEcosystem = getEcosystem;
async function testEcosystem(ecosystem, paths, options) {
    const plugin = getPlugin(ecosystem);
    let allScanResults = [];
    for (const path of paths) {
        options.path = path;
        const scanResults = await plugin.scan(options);
        allScanResults = allScanResults.concat(scanResults);
    }
    const stringifiedData = JSON.stringify(allScanResults, null, 2);
    if (options.json) {
        return types_1.TestCommandResult.createJsonTestCommandResult(stringifiedData);
    }
    const readableResult = await plugin.display(allScanResults);
    return types_1.TestCommandResult.createHumanReadableTestCommandResult(readableResult, stringifiedData);
}
exports.testEcosystem = testEcosystem;
//# sourceMappingURL=ecosystems.js.map